/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "./models";

const packageName = "azure-storage-adls";
const packageVersion = "1.0.0";

export class DataLakeStorageClientContext extends msRest.ServiceClient {
  xMsVersion?: string;
  accountName: string;
  dnsSuffix?: string;

  /**
   * Initializes a new instance of the DataLakeStorageClientContext class.
   * @param accountName The Azure Storage account name.
   * @param [options] The parameter options
   */
  constructor(accountName: string, options?: Models.DataLakeStorageClientOptions) {
    if (accountName == undefined) {
      throw new Error("'accountName' cannot be null.");
    }

    if (!options) {
      options = {};
    }

    if (!options.userAgent) {
      const defaultUserAgent = msRest.getDefaultUserAgentValue();
      options.userAgent = `${packageName}/${packageVersion} ${defaultUserAgent}`;
    }

    super(undefined, options);

    this.dnsSuffix = 'dfs.core.windows.net';
    this.baseUri = "http://{accountName}.{dnsSuffix}";
    this.requestContentType = "application/json; charset=utf-8";
    this.accountName = accountName;
    if (options.xMsVersion !== null && options.xMsVersion !== undefined) {
      this.xMsVersion = options.xMsVersion;
    }
    if (options.dnsSuffix !== null && options.dnsSuffix !== undefined) {
      this.dnsSuffix = options.dnsSuffix;
    }
  }
}
